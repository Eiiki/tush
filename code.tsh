#finds the n-th fibonacci number
def fibo(n=10)
    if(n == 0)
        return 0;
    elsif( n == 1)
        return 1;
    end
    return fibo(n-1) + fibo(n-2);
end

def max(a,b)
    var max = a;
    if(b > max)
        max = b;
    end
    return max;
end

def min(a,b)
    var max = max(a,b);
    if(max == a)
        return b;
    else
        return a;
    end
end

#example of tail recursion
def lastEl(lis, n=null)
    if(lis == null)
        return n;
    end
    lastEl(tail(lis), head(lis)); 
    #or: return lastEl(tail(lis), head(lis));
end

#just and/or/not test
def isFalse(bool=false)
    return not((bool and not bool) or (bool and bool));
end

def basicMath()
    return (1 + 2 * 3 - 4 * 2) == (1 + (2*3) - (4*2));
end

def arrayTest()
    var y = makeArray(5);
    var i = 0;
    println("Array test: ");
    while(i < 5)
        if(i % 2 == 0)
            arraySet(y,i,i % 2 == 0);
        else
            arraySet(y,i,i);
        end
        println("\t y["++ i ++"] = " ++ arrayGet(y,i));
        i = i + 1;
    end
    println();
end

def main()
    var x = [1,2,3,"meh"];
    arrayTest();
    println("x = [1,2,3,'meh']");
    println("head(x)       = " ++ head(x));
    println("lastEl(x)     = " ++ lastEl(x));
    println("fibo()        = " ++ fibo());
    println("fibo(15)      = " ++ fibo(15));
    println("isFalse(true) = " ++ isFalse(true));
    println("isFalse()     = " ++ isFalse());
    println("basicMath()   = " ++ basicMath());
    println("min(1,2)      = " ++ min(1,2));
    println("max(1,2)      = " ++ max(1,2));
    println("max(1,min(2,3)) = " ++ max(1,min(2,3)));
    println("min(3,max(1,2)) = " ++ min(3,max(1,2)));
    println("0.2 + 0.1       = " ++ 0.2 + 0.1);
end